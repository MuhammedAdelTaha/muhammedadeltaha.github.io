<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mohamed Adel</title>
    <link>https://muhammedadeltaha.github.io/</link>
    <description>Recent content on Mohamed Adel</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 14 Sep 2024 21:10:29 +0300</lastBuildDate>
    <atom:link href="https://muhammedadeltaha.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Better Understanding of Linear Regression</title>
      <link>https://muhammedadeltaha.github.io/articles/better-understanding-of-linear-regression/</link>
      <pubDate>Sat, 14 Sep 2024 21:10:29 +0300</pubDate>
      <guid>https://muhammedadeltaha.github.io/articles/better-understanding-of-linear-regression/</guid>
      <description>Created by the Author with Copilot&#xD;Table of Contents&#xD;Link to heading&#xD;Main Idea LMS Algorithm The Normal Equation Probabilistic Interpretation Locally Weighted Linear Regression Main Idea&#xD;Link to heading&#xD;Coming soon&amp;hellip;&#xA;LMS Algorithm&#xD;Link to heading&#xD;Coming soon&amp;hellip;&#xA;The Normal Equation&#xD;Link to heading&#xD;Coming soon&amp;hellip;&#xA;Probabilistic Interpretation&#xD;Link to heading&#xD;Coming soon&amp;hellip;&#xA;Locally Weighted Linear Regression&#xD;Link to heading&#xD;Coming soon&amp;hellip;</description>
    </item>
    <item>
      <title>Solar System</title>
      <link>https://muhammedadeltaha.github.io/projects/solar-system/</link>
      <pubDate>Mon, 02 Sep 2024 23:03:16 +0300</pubDate>
      <guid>https://muhammedadeltaha.github.io/projects/solar-system/</guid>
      <description>&#xD;Solar System Simulation&#xD;</description>
    </item>
    <item>
      <title>Better Understanding of AI Search Algorithms</title>
      <link>https://muhammedadeltaha.github.io/articles/better-understanding-of-ai-search-algorithms/</link>
      <pubDate>Fri, 02 Feb 2024 23:53:51 +0200</pubDate>
      <guid>https://muhammedadeltaha.github.io/articles/better-understanding-of-ai-search-algorithms/</guid>
      <description>Created by the Author with Copilot&#xD;Table of Contents&#xD;Link to heading&#xD;Main Idea Types of AI Search Algorithms Uninformed Search Algorithms Depth-First Search (DFS) Breadth-First Search (BFS) Depth-Limited Search (DLS) Iterative Deepening DFS (ID-DFS) Uniform Cost Search (UCS) Main Idea&#xD;Link to heading&#xD;Let us imagine that Engineers do not yet implement these kinds of algorithms, and we have to think about modeling a life problem into a graph that represents all the states that this problem could be in.</description>
    </item>
    <item>
      <title>About</title>
      <link>https://muhammedadeltaha.github.io/about/</link>
      <pubDate>Fri, 02 Feb 2024 23:41:40 +0200</pubDate>
      <guid>https://muhammedadeltaha.github.io/about/</guid>
      <description>&#xD;Table of Contents&#xD;Link to heading&#xD;Skills Education Courses Certificates Badges AWS Academy LeetCode Skills&#xD;Link to heading&#xD;Professional Working: Python, Java, C++, SQL, Julia, Spring Boot, OpenGL, Git, Jira Familiar with: R, Prolog, HTML, CSS, JavaScript, TypeScript, Angular CLI Soft Skills: Code Review, Teamwork, Project Management Education&#xD;Link to heading&#xD;Major: Computer and Systems Engineering Department Faculty: Faculty of Engineering University: Alexandria University Country: Egypt Starting Year: 2020 Graduation Year: 2025 Courses&#xD;Link to heading&#xD;Fall 2020-2021 Math 1 Mechanics 1 Physics 1 Engineering drawing 1 Computers &amp;amp; Programming Principles of Manufacturing and Engineering English Language Spring 2020-2021 Human Rights Math 2 Mechanics 2 Physics 2 Engineering drawing 2 History of Engineering and Technology Engineering Chemistry Fall 2021-2022 Probability Theory and Computer Applications Programming I Digital Logic Design Computer and Society I Linear Algebra Fundamentals of Electrical Engineering Spring 2021-2022 Digital Systems Design Electronic Circuits and Devices Computer and Society II Differential Equations Statistical Methods for Computing Data Structures Fall 2022-2023 Numerical Computations Discrete Structures Programming II Computer Organization Human Computer Interaction Communication skills Spring 2022-2023 Technical Writing Fundamentals of Control Systems Operation Research and Optimization Techniques Data Structures and Algorithms Programming Languages Paradigms Operating Systems Fall 2023-2024 Design and Analysis of Algorithms Software Engineering Database Systems Innovation and Entrepreneurship Computer Networks Introduction to Artificial Intelligence Spring 2023-2024 Pattern Recognition Embedded Control System Computer Architecture Digital and Modern Control Systems Computer Graphics Critical Thinking Certificates&#xD;Link to heading&#xD;Introduction to Scripting in Python: Certificate-Link - Coursera - September 2023 Badges&#xD;Link to heading&#xD;AWS Academy&#xD;Link to heading&#xD;LeetCode&#xD;Link to heading&#xD;</description>
    </item>
    <item>
      <title>Data Structures</title>
      <link>https://muhammedadeltaha.github.io/projects/data-structures/</link>
      <pubDate>Thu, 01 Feb 2024 20:18:52 +0200</pubDate>
      <guid>https://muhammedadeltaha.github.io/projects/data-structures/</guid>
      <description>&#xD;Table of Contents&#xD;Link to heading&#xD;Graph Hashing Heap Tree Graph&#xD;Link to heading&#xD;Hashing&#xD;Link to heading&#xD;Heap&#xD;Link to heading&#xD;Tree&#xD;Link to heading&#xD;</description>
    </item>
    <item>
      <title>Algorithms</title>
      <link>https://muhammedadeltaha.github.io/projects/algorithms/</link>
      <pubDate>Thu, 01 Feb 2024 20:18:47 +0200</pubDate>
      <guid>https://muhammedadeltaha.github.io/projects/algorithms/</guid>
      <description>&#xD;Table of Contents&#xD;Link to heading&#xD;Huffman Coding Maximum Side Length Median Finding Shortest Path Algorithms Huffman Coding&#xD;Link to heading&#xD;Maximum Side Length&#xD;Link to heading&#xD;Median Finding&#xD;Link to heading&#xD;Shortest Path Algorithms&#xD;Link to heading&#xD;</description>
    </item>
    <item>
      <title>Connect Four AI Agent</title>
      <link>https://muhammedadeltaha.github.io/projects/connect-four-ai-agent/</link>
      <pubDate>Thu, 01 Feb 2024 20:18:41 +0200</pubDate>
      <guid>https://muhammedadeltaha.github.io/projects/connect-four-ai-agent/</guid>
      <description>Table of Contents&#xD;Link to heading&#xD;Summary Summary&#xD;Link to heading&#xD;Minimax with/without alpha-beta pruning and heuristic evaluation function</description>
    </item>
    <item>
      <title>8 Puzzle AI Solver</title>
      <link>https://muhammedadeltaha.github.io/projects/8-puzzle-ai-solver/</link>
      <pubDate>Thu, 01 Feb 2024 20:18:34 +0200</pubDate>
      <guid>https://muhammedadeltaha.github.io/projects/8-puzzle-ai-solver/</guid>
      <description>Table of Contents&#xD;Link to heading&#xD;Introduction Depth First Search Breadth First Search A* Search with Manhattan heuristic A* Search with Euclidean heuristic Test Cases &amp;amp; Comparisons Observation Simulation Introduction&#xD;Link to heading&#xD;This project discusses the main differences between the different types of AI Search Algorithms like the completeness and the optimality of the algorithm We used the 8-puzzle problem as an application that demonstrates these differences Depth-First Search&#xD;Link to heading&#xD;Data Structure: Stack Completeness: Not complete Optimality: Not optimal Time: O($ b^m $) Space: O($ b*m $) b is the branching factor m is the maximum possible search tree depth DFS is good only when it comes to space complexity Breadth-First Search&#xD;Link to heading&#xD;Data Structure: Queue Completeness: Complete Optimality: Optimal Time: O($ b^s $) Space: O($ b^s $) b is the branching factor s is the level where the goal state is present BFS is not very well dealt with space BFS can find the optimal solution only if all costs are equal to one A* Search with Manhattan heuristic&#xD;Link to heading&#xD;Data Structure: Priority Queue Completeness: Complete Optimality: Optimal A* Search Always finds the optimal solution A* Search considers the past cost and the upcoming heuristic cost Manhattan distance = $| x_1 - x_2 | + | y_1 - y_2 |$ A* Search with Euclidean heuristic&#xD;Link to heading&#xD;Data Structure: Priority Queue Completeness: Complete Optimality: Optimal A* Search Always finds the optimal solution A* Search considers the past cost and the upcoming heuristic cost Euclidean distance = $\sqrt{ (x_1 - x_2)^2 + (y_1 - y_2)^2 }$ Test Cases &amp;amp; Comparisons&#xD;Link to heading&#xD;Test #1&#xD;Link to heading&#xD;Input: 1 2 3 4 5 6 8 7 0 - Unsolvable test case -</description>
    </item>
    <item>
      <title>Central Student Hub</title>
      <link>https://muhammedadeltaha.github.io/projects/central-student-hub/</link>
      <pubDate>Thu, 01 Feb 2024 20:17:39 +0200</pubDate>
      <guid>https://muhammedadeltaha.github.io/projects/central-student-hub/</guid>
      <description>&#xD;Table of Contents&#xD;Link to heading&#xD;Summary Summary&#xD;Link to heading&#xD;Implemented the Controller, Service, and Repository layers in the Backend for several components like Course, Grade, and Feedback Helped in the Frontend by implementing the HTML/CSS for the Login and Sign Up pages Developed and optimized the project Database using ER-Diagrams and Normalization Reviewed the code written by my teammates to ensure high standards for our project Used Jira to introduce time estimates for a better project management process Delivered several test cases that achieved - 100% code coverage </description>
    </item>
    <item>
      <title>Matrix Multiplication</title>
      <link>https://muhammedadeltaha.github.io/projects/matrix-multiplication/</link>
      <pubDate>Thu, 01 Feb 2024 20:17:33 +0200</pubDate>
      <guid>https://muhammedadeltaha.github.io/projects/matrix-multiplication/</guid>
      <description>&#xD;Table of Contents&#xD;Link to heading&#xD;Summary Summary&#xD;Link to heading&#xD;Developed and optimized a multithreading matrix multiplication algorithm, enhancing computational efficiency for large matrices Implemented synchronization and load-balancing strategies for optimal resource utilization on multicore processors </description>
    </item>
    <item>
      <title>Game Engine</title>
      <link>https://muhammedadeltaha.github.io/projects/game-engine/</link>
      <pubDate>Thu, 01 Feb 2024 20:17:18 +0200</pubDate>
      <guid>https://muhammedadeltaha.github.io/projects/game-engine/</guid>
      <description>Demo&#xD;Link to heading&#xD;Table of Contents&#xD;Link to heading&#xD;Game Engine Architecture Code Structure Core OOP Architecture Base Game Engine Class Game Implementation Structure Key Design Patterns Template Method Pattern Factory Pattern Polymorphism Scalability Features Component Isolation State Management Asset Management Adding a New Game (3 Steps) Architecture Benefits Game Engine Architecture&#xD;Link to heading&#xD;A modular game engine built with JavaScript and OOP principles, designed to easily integrate multiple board games while maintaining a consistent architecture.</description>
    </item>
    <item>
      <title>Email Server</title>
      <link>https://muhammedadeltaha.github.io/projects/email-server/</link>
      <pubDate>Thu, 01 Feb 2024 19:48:40 +0200</pubDate>
      <guid>https://muhammedadeltaha.github.io/projects/email-server/</guid>
      <description>&#xD;Table of Contents&#xD;Link to heading&#xD;Summary Summary&#xD;Link to heading&#xD;Developed an Email Server encompassing features such as add attachment, compose, star, and delete messages Implemented other features like the ability to create and delete folders, searching on messages, and sorting messages Organized the application to contain several sections like inbox, draft, starred, deleted, and contacts Improved the code design by applying several Design Patterns on the project such as Filter, Proxy, and MVC design patterns </description>
    </item>
    <item>
      <title>Paint Application</title>
      <link>https://muhammedadeltaha.github.io/projects/paint-application/</link>
      <pubDate>Thu, 01 Feb 2024 08:53:04 +0200</pubDate>
      <guid>https://muhammedadeltaha.github.io/projects/paint-application/</guid>
      <description>&#xD;Table of Contents&#xD;Link to heading&#xD;Summary Summary&#xD;Link to heading&#xD;Developed a comprehensive Paint Application encompassing features such as creating, modifying and deleting various shapes with the ability to clear the board, manipulate colors, copy, resize and undo/redo actions Incorporated functionality for saving and loading drawings using either XML or JSON Improved the code design by applying several Design Patterns on the project such as Factory, Memento, and MVC design patterns </description>
    </item>
  </channel>
</rss>
