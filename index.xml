<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mohamed Adel</title>
    <link>https://muhammedadeltaha.github.io/</link>
    <description>Recent content on Mohamed Adel</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 01 Feb 2025 08:53:04 +0200</lastBuildDate>
    <atom:link href="https://muhammedadeltaha.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Paint Application</title>
      <link>https://muhammedadeltaha.github.io/projects/paint-application/</link>
      <pubDate>Sat, 01 Feb 2025 08:53:04 +0200</pubDate>
      <guid>https://muhammedadeltaha.github.io/projects/paint-application/</guid>
      <description>Table of Contents&#xD;Link to heading&#xD;Summary Key Design Patterns Frontend Patterns Backend Patterns Architecture Overview Frontend Structure Backend Structure Key Benefits Setup Instructions Design Pattern Impact Demo Video Summary&#xD;Link to heading&#xD;A collaborative drawing application with undo/redo capabilities, built with Angular (frontend) and Spring Boot (backend), demonstrating clean architecture and design pattern implementation.&#xA;Key Design Patterns&#xD;Link to heading&#xD;Frontend Patterns&#xD;Link to heading&#xD;1. Factory Method Pattern (shapeFactory/)&#xD;Link to heading&#xD;Implementation: Shape creation through ShapeFactory and concrete classes (circle.</description>
    </item>
    <item>
      <title>Connect Four AI Agent</title>
      <link>https://muhammedadeltaha.github.io/projects/connect-four-ai-agent/</link>
      <pubDate>Mon, 27 Jan 2025 20:18:41 +0200</pubDate>
      <guid>https://muhammedadeltaha.github.io/projects/connect-four-ai-agent/</guid>
      <description>Table of Contents&#xD;Link to heading&#xD;Summary Files Overview Heuristic Score Calculation Minimax Algorithm Key Parts Methods GUI Features Dependencies Demo Video Summary&#xD;Link to heading&#xD;This project implements an AI agent for Connect Four using the Minimax algorithm with alpha-beta pruning. The game features a graphical user interface (GUI) where users can play against the AI, adjust the search depth, and toggle pruning.&#xA;Files Overview&#xD;Link to heading&#xD;GUI.</description>
    </item>
    <item>
      <title>Solar System</title>
      <link>https://muhammedadeltaha.github.io/projects/solar-system/</link>
      <pubDate>Sun, 26 Jan 2025 23:03:16 +0300</pubDate>
      <guid>https://muhammedadeltaha.github.io/projects/solar-system/</guid>
      <description>Table of Contents&#xD;Link to heading&#xD;Code Architecture Overview Shaders Materials Buffers &amp;amp; Layouts Textures Shapes Renderer Camera Debugger OOP Concepts in Rendering Loop Inheritance &amp;amp; Polymorphism Encapsulation Separation of Concerns How the Rendering Loop Works Demo Video Code Architecture Overview&#xD;Link to heading&#xD;This project simulates a 3D solar system using OpenGL. Below is a breakdown of the key parts and their roles.&#xA;Shaders&#xD;Link to heading&#xD;Color.shader: Renders objects with a solid color.</description>
    </item>
    <item>
      <title>8 Puzzle AI Solver</title>
      <link>https://muhammedadeltaha.github.io/projects/8-puzzle-ai-solver/</link>
      <pubDate>Sun, 26 Jan 2025 20:18:34 +0200</pubDate>
      <guid>https://muhammedadeltaha.github.io/projects/8-puzzle-ai-solver/</guid>
      <description>Table of Contents&#xD;Link to heading&#xD;Introduction Depth First Search Breadth First Search A* Search with Manhattan heuristic A* Search with Euclidean heuristic Test Cases &amp;amp; Comparisons Observation Demo Video Introduction&#xD;Link to heading&#xD;This project discusses the main differences between the different types of AI Search Algorithms like the completeness and the optimality of the algorithm We used the 8-puzzle problem as an application that demonstrates these differences Depth-First Search&#xD;Link to heading&#xD;Data Structure: Stack Completeness: Not complete Optimality: Not optimal Time: O($ b^m $) Space: O($ b*m $) b is the branching factor m is the maximum possible search tree depth DFS is good only when it comes to space complexity Breadth-First Search&#xD;Link to heading&#xD;Data Structure: Queue Completeness: Complete Optimality: Optimal Time: O($ b^s $) Space: O($ b^s $) b is the branching factor s is the level where the goal state is present BFS is not very well dealt with space BFS can find the optimal solution only if all costs are equal to one A* Search with Manhattan heuristic&#xD;Link to heading&#xD;Data Structure: Priority Queue Completeness: Complete Optimality: Optimal A* Search Always finds the optimal solution A* Search considers the past cost and the upcoming heuristic cost Manhattan distance = $| x_1 - x_2 | + | y_1 - y_2 |$ A* Search with Euclidean heuristic&#xD;Link to heading&#xD;Data Structure: Priority Queue Completeness: Complete Optimality: Optimal A* Search Always finds the optimal solution A* Search considers the past cost and the upcoming heuristic cost Euclidean distance = $\sqrt{ (x_1 - x_2)^2 + (y_1 - y_2)^2 }$ Test Cases &amp;amp; Comparisons&#xD;Link to heading&#xD;Test #1&#xD;Link to heading&#xD;Input: 1 2 3 4 5 6 8 7 0 - Unsolvable test case -</description>
    </item>
    <item>
      <title>Game Engine</title>
      <link>https://muhammedadeltaha.github.io/projects/game-engine/</link>
      <pubDate>Sun, 26 Jan 2025 20:17:18 +0200</pubDate>
      <guid>https://muhammedadeltaha.github.io/projects/game-engine/</guid>
      <description>Demo&#xD;Link to heading&#xD;Table of Contents&#xD;Link to heading&#xD;Game Engine Architecture Code Structure Core OOP Architecture Base Game Engine Class Game Implementation Structure Key Design Patterns Template Method Pattern Factory Pattern Polymorphism Scalability Features Component Isolation State Management Asset Management Adding a New Game (3 Steps) Architecture Benefits Game Engine Architecture&#xD;Link to heading&#xD;A modular game engine built with JavaScript and OOP principles, designed to easily integrate multiple board games while maintaining a consistent architecture.</description>
    </item>
    <item>
      <title>Better Understanding of AI Search Algorithms</title>
      <link>https://muhammedadeltaha.github.io/articles/better-understanding-of-ai-search-algorithms/</link>
      <pubDate>Fri, 02 Feb 2024 23:53:51 +0200</pubDate>
      <guid>https://muhammedadeltaha.github.io/articles/better-understanding-of-ai-search-algorithms/</guid>
      <description>Created by the Author with Copilot&#xD;Table of Contents&#xD;Link to heading&#xD;Main Idea Types of AI Search Algorithms Uninformed Search Algorithms Depth-First Search (DFS) Breadth-First Search (BFS) Depth-Limited Search (DLS) Iterative Deepening DFS (ID-DFS) Uniform Cost Search (UCS) Main Idea&#xD;Link to heading&#xD;Let us imagine that Engineers do not yet implement these kinds of algorithms, and we have to think about modeling a life problem into a graph that represents all the states that this problem could be in.</description>
    </item>
    <item>
      <title>About</title>
      <link>https://muhammedadeltaha.github.io/about/</link>
      <pubDate>Fri, 02 Feb 2024 23:41:40 +0200</pubDate>
      <guid>https://muhammedadeltaha.github.io/about/</guid>
      <description>&#xD;Table of Contents&#xD;Link to heading&#xD;Skills Education Courses Certificates Badges AWS Academy LeetCode Skills&#xD;Link to heading&#xD;Programming Languages: Python, Java, C++, SQL, Julia. Frameworks &amp;amp; Tools: Spring Boot, OpenGL, Docker, Git, Postman, Jira. Basic Knowledge: Hadoop, Spark, R, Prolog, HTML, CSS, JavaScript, TypeScript, Angular CLI. Soft Skills: Code Review, Project Management, Problem Solving, Self-Learning, Teamwork, Writing in LaTeX. Education&#xD;Link to heading&#xD;Major: Computer and Systems Engineering Department Faculty: Faculty of Engineering University: Alexandria University Country: Egypt Starting Year: 2020 Graduation Year: 2025 Courses&#xD;Link to heading&#xD;Fall 2020-2021 Math 1 Mechanics 1 Physics 1 Engineering drawing 1 Computers &amp;amp; Programming Spring 2020-2021 Human Rights Math 2 Mechanics 2 Physics 2 Engineering drawing 2 History of Engineering and Technology Engineering Chemistry Fall 2021-2022 Probability Theory and Computer Applications Programming I Digital Logic Design Computer and Society I Linear Algebra Fundamentals of Electrical Engineering Spring 2021-2022 Digital Systems Design Electronic Circuits and Devices Computer and Society II Differential Equations Statistical Methods for Computing Data Structures Fall 2022-2023 Numerical Computations Discrete Structures Programming II Computer Organization Human Computer Interaction Communication skills Spring 2022-2023 Technical Writing Fundamentals of Control Systems Operation Research and Optimization Techniques Data Structures and Algorithms Programming Languages Paradigms Operating Systems Fall 2023-2024 Design and Analysis of Algorithms Software Engineering Database Systems Innovation and Entrepreneurship Computer Networks Introduction to Artificial Intelligence Spring 2023-2024 Pattern Recognition Embedded Control System Computer Architecture Digital and Modern Control Systems Computer Graphics Critical Thinking Fall 2024-2025 Parallel and Distributed Computing Data Mining Blockchains Introduction to Compilers Energy, water and climate change issues Spring 2024-2025 Distributed Systems Designing Data-Intensive Applications Security of Computer Systems Information Theory and Multimedia Processing Law and Ethics in Engineering Certificates&#xD;Link to heading&#xD;Introduction to Scripting in Python: Certificate-Link - Coursera - September 2023 Badges&#xD;Link to heading&#xD;AWS Academy&#xD;Link to heading&#xD;LeetCode&#xD;Link to heading&#xD;</description>
    </item>
    <item>
      <title>Central Student Hub</title>
      <link>https://muhammedadeltaha.github.io/projects/central-student-hub/</link>
      <pubDate>Thu, 01 Feb 2024 20:17:39 +0200</pubDate>
      <guid>https://muhammedadeltaha.github.io/projects/central-student-hub/</guid>
      <description>&#xD;Table of Contents&#xD;Link to heading&#xD;Summary Summary&#xD;Link to heading&#xD;Implemented the Controller, Service, and Repository layers in the Backend for several components like Course, Grade, and Feedback Helped in the Frontend by implementing the HTML/CSS for the Login and Sign Up pages Developed and optimized the project Database using ER-Diagrams and Normalization Reviewed the code written by my teammates to ensure high standards for our project Used Jira to introduce time estimates for a better project management process Delivered several test cases that achieved - 100% code coverage </description>
    </item>
    <item>
      <title>Email Server</title>
      <link>https://muhammedadeltaha.github.io/projects/email-server/</link>
      <pubDate>Thu, 01 Feb 2024 19:48:40 +0200</pubDate>
      <guid>https://muhammedadeltaha.github.io/projects/email-server/</guid>
      <description>&#xD;Table of Contents&#xD;Link to heading&#xD;Summary Summary&#xD;Link to heading&#xD;Developed an Email Server encompassing features such as add attachment, compose, star, and delete messages Implemented other features like the ability to create and delete folders, searching on messages, and sorting messages Organized the application to contain several sections like inbox, draft, starred, deleted, and contacts Improved the code design by applying several Design Patterns on the project such as Filter, Proxy, and MVC design patterns </description>
    </item>
  </channel>
</rss>
